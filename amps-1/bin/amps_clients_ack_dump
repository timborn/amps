#! /usr/bin/env python
###############################################################################
##
## Copyright (c) 2012-2017 60East Technologies Inc., All Rights Reserved.
##
## This computer software is owned by 60East Technologies Inc. and is
## protected by U.S. copyright laws and other laws and by international
## treaties.  This computer software is furnished by 60East Technologies
## Inc. pursuant to a written license agreement and may be used, copied,
## transmitted, and stored only in accordance with the terms of such
## license agreement and with the inclusion of the above copyright notice.
## This computer software or any other copies thereof may not be provided
## or otherwise made available to any other person.
##
## U.S. Government Restricted Rights.  This computer software: (a) was
## developed at private expense and is in all respects the proprietary
## information of 60East Technologies Inc.; (b) was not developed with
## government funds; (c) is a trade secret of 60East Technologies Inc.
## for all purposes of the Freedom of Information Act; and (d) is a
## commercial item and thus, pursuant to Section 12.212 of the Federal
## Acquisition Regulations (FAR) and DFAR Supplement Section 227.7202,
## Government's use, duplication or disclosure of the computer software
## is subject to the restrictions set forth by 60East Technologies Inc..
##
###############################################################################

import sys

# Insert the lib directory into PYTHONPATH
import os
sys.path.append(os.path.join(os.path.dirname(sys.argv[0]), "lib"))
import amps_ack

#from AmpsClientsAckDump import AmpsClientsAckDump

# Before doing anything, check that we're running at least version 2.5
if ''.join(map(str, sys.version_info[0:3])) < '250':
    sys.stderr.write('Error: %s requires Python 2.5 or greater.\n' % sys.argv[0])
    sys.exit(1)

import struct
import gzip
import glob


def GetParams():
    params = {}
    from optparse import OptionParser
    usage = "%prog [options] <files>"
    version = "%prog 2.0"
    description = "This tool dumps an AMPS clients.ack file to standard output."
    parser = OptionParser(usage=usage, version=version, description=description)
    parser.add_option("-n", "--limit", dest="limit", type="int", default=sys.maxint,
                      help="maximum number of records to print per file")
    (options, args) = parser.parse_args()

    # Make sure we have everything we need
    if not len(args) > 0:
        parser.print_help()
        sys.stderr.write("\nError: Must provide an AMPS clients.ack persistence file.\n")
        sys.exit(1)

    params['filenames'] = args
    params['limit'] = options.limit
    return params


def main():
    # Get options
    params = GetParams()

    FILE_NAMES = params['filenames']
    LIMIT = params['limit']

    records_printed = 0

    for filename in FILE_NAMES:
        amps_ack.dump(filename, int(LIMIT))
    
if(__name__ == "__main__"):
    if(0):
        import cProfile
        import pstats
        cProfile.run('main()', 'profile.data')
        p = pstats.Stats('profile.data')
        p.strip_dirs().sort_stats('time').print_stats(10)
    else:
        main()
