#!/usr/bin/env python
###############################################################################
##
## Copyright (c) 2012-2017 60East Technologies Inc., All Rights Reserved.
##
## This computer software is owned by 60East Technologies Inc. and is
## protected by U.S. copyright laws and other laws and by international
## treaties.  This computer software is furnished by 60East Technologies
## Inc. pursuant to a written license agreement and may be used, copied,
## transmitted, and stored only in accordance with the terms of such
## license agreement and with the inclusion of the above copyright notice.
## This computer software or any other copies thereof may not be provided
## or otherwise made available to any other person.
##
## U.S. Government Restricted Rights.  This computer software: (a) was
## developed at private expense and is in all respects the proprietary
## information of 60East Technologies Inc.; (b) was not developed with
## government funds; (c) is a trade secret of 60East Technologies Inc.
## for all purposes of the Freedom of Information Act; and (d) is a
## commercial item and thus, pursuant to Section 12.212 of the Federal
## Acquisition Regulations (FAR) and DFAR Supplement Section 227.7202,
## Government's use, duplication or disclosure of the computer software
## is subject to the restrictions set forth by 60East Technologies Inc..
##
###############################################################################

import sys

# Before doing anything, check that we're running at least version 2.5
if ''.join(map(str, sys.version_info[0:3])) < '250':
    sys.stderr.write('Error: %s requires Python 2.5 or greater.\n' % sys.argv[0])
    sys.exit(1)

# Insert the lib directory into PYTHONPATH
import os
sys.path.append(os.path.join(os.path.dirname(sys.argv[0]), "lib"))


import amps_ack
import amps_sow
import amps_journal


USAGE="%s <files>" % os.path.basename(sys.argv[0])


def err(msg):
    sys.stderr.write("%s\n" % msg)
    sys.stderr.flush()


ext_to_module = {
    "sow": amps_sow,
    "journal": amps_journal,
    "ack": amps_ack,
    "journal.gz": amps_journal,
    }


def amps_ext(path):
    for ext in ext_to_module:
        if path.endswith(ext):
            return ext
    return None


def get_module(path):
    ext = amps_ext(path)
    if ext:
        return ext_to_module[ext]
    return None


def is_amps_file(path):
    return amps_ext(path) is not None


def find_amps_files(paths):
    files = []
    for path in paths:
        if os.path.isfile(path):
            if is_amps_file(path):
                files.append(path)
        elif os.path.isdir(path):
            for (thisDir, dirNames, fileNames) in os.walk(path):
                for fileName in fileNames:
                    thisFile = os.path.join(thisDir, fileName)
                    if is_amps_file(thisFile):
                        files.append(thisFile)
    files.sort()
    return files


if(__name__ == "__main__"):
    for file in find_amps_files(sys.argv[1:]):
        module = get_module(file)
        filetype = module.__name__.replace("amps_", "")
        version = module.version(file)
        print "%s: AMPS %s %s" % (file, filetype, version)



